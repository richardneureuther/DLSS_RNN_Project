---
title: "Prelim_NCES_Data"
format: html
editor: visual
---
```{r}
#load packages 
library(tidyverse)
library(readxl)
```

```{r}
#load NCES data
NCES <-  read_xlsx("NCES_Initial_Clean.xlsx")
```


```{r}
#load Metro Micro labels
metro_labels <- read.csv("Metro_Micro_Areas.csv", colClasses = "character")
```


```{r}
#create copy of NCES
NCES_clean <- NCES
#replace NCES na with proper ones
NCES_clean <- NCES_clean %>%
  mutate(across(everything(), ~na_if(.x, "†"))) %>%
  mutate(across(everything(), ~na_if(.x, "–"))) %>%
  mutate(across(everything(), ~na_if(.x, "‡")))
#convert metro N/A to proper  N/A
NCES_clean <- NCES_clean %>%
  mutate(across(starts_with("Metro"), ~na_if(.x, "N/A")))
```

```{r}
#remove all rows where FIPS is N/A
NCES_clean <- NCES_clean %>%
  filter(!is.na(FIPS))

#head 10 0f NCES
nces_smol <- head(NCES_clean,10)
```

```{r}
#check number of unique entires in the FIPS codes
length(unique(NCES_clean$FIPS))
```

```{r}
#convert all but the few meta data columns to numeric
cols_to_convert <- setdiff(names(NCES_clean), c("Agency Name", "state_name", "state_abbr", "county_name","FIPS"))

#convert relevant columns
NCES_clean[cols_to_convert] <- lapply(NCES_clean[cols_to_convert], function(x) as.numeric(gsub(",", "", x))) 
```

```{r}
#summ up converted columns
NCES_county <- NCES_clean %>%
  group_by(FIPS) %>%
  summarise(across(all_of(cols_to_convert), ~sum(.x, na.rm = TRUE)))

```

```{r}
#fetch unique county metadata
county_metadata <- NCES %>%
  select(FIPS, county_name, state_name, state_abbr) %>%
  distinct(FIPS, .keep_all = TRUE)

join
NCES_county <- left_join(county_metadata, NCES_county, by = "FIPS")

```

```{r}
#check number of NA
sum(is.na(NCES_county))
```
```{r}
summary(metro_labels)
```

```{r}
#create 5 digit FIPS code from the state and county FIPS
metro_labels$FIPS <- paste0(metro_labels$FIPS_state, metro_labels$FIPS_county)

#remove redundnat rows
metro_labels <- metro_labels %>%
  select(-FIPS_state, -FIPS_county,-county_name,-state_name )

#rename clunky column name
names(metro_labels)[names(metro_labels) == 'Metropolitan.Micropolitan.Statistical.Area'] <- 'Metro_Micro'

#make Metro_Micro a boolean
metro_labels <- metro_labels %>%
  mutate(Metro_Micro = ifelse(Metro_Micro == "Metropolitan Statistical Area", 1, 0))
```

```{r}
summary(NCES_county)
summary(metro_labels)
```
```{r}
NCES_complete <- NCES_county %>%
  left_join(metro_labels, by = "FIPS") %>%
  relocate(any_of(names(metro_labels)), .before = 1)

NCES_complete <- NCES_complete %>%
  relocate(county_name, FIPS, .before = 1)

#remove first row
NCES_complete <- NCES_complete[-1, ]
```
```{r}
NCES_complete
```

```{r}
#export as csv
write_csv(NCES_complete, "NCES_aggregated.csv")
write_csv(metro_labels, "Metro_Areas_Labels.csv")
```

```{r}
#get NCES back
NCES <- read_csv("NCES_aggregated.csv")
```
```{r}
summary(NCES)
```
```{r}
#head 10 of NCES
nces_smol <- head(NCES, 10)
nces_smol
```


```{r}
#identifier columns)
id_cols <- c("county_name", "FIPS", "CBSA_Code", "CSA_Code", "CBSA_name", 
             "Metro_Micro", "CSA_name", "state_name", "state_abbr")

#create consistent year variable
NCES_long <- NCES %>%
  pivot_longer(
    cols = -all_of(id_cols),
    names_to = c("variable", "year"),
    names_sep = "_(?=\\d{4}-\\d{2})",
    values_to = "value"
  ) %>%
  mutate(value = as.numeric(value)) %>% 
  pivot_wider(
    names_from = variable,
    values_from = value
  )

#check new data frame 
glimpse(NCES_long)
```

```{r}
#export NCES_long as csv
write_csv(NCES_long, "NCES_aggregated_long.csv")
```

```{r}
#import NCES long dataset
NCES_long <- read_csv("NCES_aggregated_long.csv")
```
```{r}
#remove all rows that have N/A in the CBSA_name column
NCES_area <- NCES_long %>%
  filter(!is.na(CBSA_name))
```

```{r}
#helper fucntion that checks whether all values being summed up are N/A. To keep distiction between 0 and NA
safe_sum <- function(x) {
  if (all(is.na(x))) {
    return(NA_real_)
  } else {
    return(sum(x, na.rm = TRUE))
  }
}
```


```{r}
#aggregate from county to CBSA level
NCES_cbsa <- NCES_area %>%
  group_by(CBSA_Code, CBSA_name, year) %>%
  summarise(
    total_students = safe_sum(total_students),
    diploma_recipients = safe_sum(diploma_recipients),
    enterprise_operations = safe_sum(enterprise_operations),
    food_services = safe_sum(food_services),
    instruction_expenditures = safe_sum(instruction_expenditures),
    non_specified = safe_sum(non_specified),
    other_non_instructional = safe_sum(other_non_instructional),
    general_admin = safe_sum(general_admin),
    instr_staff_support = safe_sum(instr_staff_support),
    ops_maint = safe_sum(ops_maint),
    other_support = safe_sum(other_support),
    admin = safe_sum(admin),
    transportation = safe_sum(transportation),
    student_support = safe_sum(student_support),
    .groups = "drop"
  )
```

```{r}
#check number of uniqe entries in CBSA codes
length(unique(NCES_cbsa$CBSA_name))
```

```{r}
#add back the metro labels
#clean metro labels
metro_labels_clean <- metro_labels %>%
  mutate(CBSA_Code = as.numeric(CBSA_Code)) %>%
  select(CBSA_Code, Metro_Micro) %>%
  distinct(CBSA_Code, .keep_all = TRUE)  

#join
NCES_cbsa_final <- NCES_cbsa %>%
  left_join(metro_labels_clean, by = "CBSA_Code")
```

```{r}
#metroc micro level in front
NCES_cbsa_final <- NCES_cbsa_final %>%
  relocate(Metro_Micro, .before = 4)
```

```{r}
#export as csv
write_csv(NCES_cbsa_final, "NCES_cbsa.csv")
```


